defpackage solution :
    import core
    import io
    import seq



defn group-chars (s:String) :
    val chars = to-seq(s)
    to-list $ group(chars)


defn char-counts (s:String) -> List<Int> :
    map{length, _} $ group-chars(s)


defn checksum (box-ids:Seqable<String>) -> Int :
    var duplicate-count = 0
    var triplicate-count = 0
    for id in to-seq(box-ids) do :
        val lengths = char-counts(id)
        if any?({_ == 2}, lengths) :
            duplicate-count = duplicate-count + 1
        if any?({_ == 3}, lengths) :
            triplicate-count = triplicate-count + 1
    duplicate-count * triplicate-count


println $ checksum $ get-lines()
