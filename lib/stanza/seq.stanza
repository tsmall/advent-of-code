;; seq.stanza -- Seq Utilities
;;
;; This package provides utilities for working with Seqs.

defpackage seq :
    import core
    import collections



public defn group<?T> (xs:Seq<?T>) -> Seqable<Lengthable> :
    val groups = HashTable<T, Vector<T>>()
    for x in xs do :
        if key?(groups, x) :
            val v = get(groups, x)
            add(v, x)
        else :
            val v = Vector<T>()
            add(v, x)
            set(groups, x, v)
    values(groups)


public defn repeat-forever<?T> (xs:IndexedCollection<?T>) -> Seq<T> :
    var next-index = 0
    new Seq<T> :
        defmethod empty? (this) :
            empty?(xs)
        defmethod peek (this) :
            get(xs, next-index)
        defmethod next (this) :
            val x = peek(this)
            next-index = next-index + 1
            if next-index >= length(xs) :
                next-index = 0
            x
